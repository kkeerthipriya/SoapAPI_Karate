buildscript {
	ext {
		springBootVersion = '1.5.3.RELEASE'
		gradleVersionProperty = '4.1'
		karateVersion = '0.5.0'
		masterThought = '3.8.0'
	}
    repositories {
        maven { url 'https://plugins.gradle.org/m2/' }
		maven { url "http://repo.spring.io/release" }
		maven { url "http://repo.spring.io/milestone" }
		maven { url "http://repo.spring.io/snapshot" }        
    }
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}    
}

apply plugin: 'eclipse'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

jar {
	baseName = 'karate-demo'
	version =  '0.5.1'
}

bootRun {
  systemProperties = System.properties
}

// In this section you declare where to find the dependencies of your project
repositories {
    mavenLocal()
    mavenCentral()
    maven { url "http://repo.spring.io/release" }
	maven { url "http://repo.spring.io/milestone" }
	maven { url "http://repo.spring.io/snapshot" }
}

sourceSets {
    test {
        java 
            {
                // Excluding UIRunner files as these require the javafx libraries
                // which are not shipped with OpenJDK. These UIRunner classes are
                // classes that allow developers to run/debug karate tests via a UI
                // and as such are not required for headless runs on jenkins server
                // but can run happily via IDE of the developer without needed to be
                // compiled by gradle.  
                srcDir file('src/test/java')
                exclude '**/*UiRunner*.java'
            }
        resources
            {
                // Using recommended karate project layout where karate feature files
                // and associated javascript resources sit in same /test/java folders
                // as their java counterparts. 
                srcDir file('src/test/java')
                exclude '**/*.java'
            }
    }
}

dependencies {
	compile 'org.springframework.boot:spring-boot-starter-web'
	compile 'org.springframework.boot:spring-boot-starter-security' 
	compile 'commons-io:commons-io:2.5'
    testCompile 'junit:junit'
    testCompile 'com.intuit.karate:karate-junit4:' + karateVersion
    testCompile 'com.intuit.karate:karate-apache:' + karateVersion
    testCompile 'net.masterthought:cucumber-reporting:' + masterThought
    compile 'com.github.java-json-tools:json-schema-validator:2.2.8'

}

test {
    // When running the test task, only run the base Test class which runs all cucumber
    // tests in parallel.
    include '**/*DemoTestParallel*'
    // Pull cucumber options into the cucumber JVM
    systemProperty "cucumber.options", System.properties.getProperty("cucumber.options")
    // Pull karate options into the JVM
    systemProperty "karate.env", System.properties.getProperty("karate.env")
    // Ensure tests are always run
    outputs.upToDateWhen { false }
}

task wrapper(type: Wrapper) { 
    gradleVersion = gradleVersionProperty 
}
